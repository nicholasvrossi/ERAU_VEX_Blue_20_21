16
{"last_modification_time":1600730212,"language":2,"import_file":"c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/motor_def.hpp","args_hash":13581093539579289560,"includes":[{"line":23,"resolved_path":"c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/rtos.h"}],"dependencies":["c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/motor_def.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/main.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/api.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/adi.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/ext_adi.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/imu.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/llemu.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lvgl.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_log.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_conf.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_task.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_mem.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_ll.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_hal/lv_hal.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_hal/lv_hal_disp.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_color.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_area.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_hal/lv_hal_indev.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_obj.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_style.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_font.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_symbol_def.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_fonts/lv_font_builtin.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_anim.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_hal/lv_hal_tick.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_group.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_lang.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_vdb.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_refr.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_templ.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_default.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_alien.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_night.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_zen.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_mono.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_nemo.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_themes/lv_theme_material.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_btn.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_cont.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_core/lv_indev.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_imgbtn.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_draw/lv_draw_img.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_draw/lv_draw.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_txt.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_draw/lv_draw_rect.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_draw/lv_draw_label.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_draw/lv_draw_triangle.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_img.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_misc/lv_fs.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_label.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_line.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_page.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_list.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_chart.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_table.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_cb.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_bar.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_slider.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_led.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_btnm.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_kb.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_ddlist.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_roller.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_ta.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_canvas.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_win.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_tabview.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_tileview.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_mbox.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_gauge.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_lmeter.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_sw.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_arc.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_preload.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_calendar.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_objx/lv_spinbox.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/misc.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/motors.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/rtos.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/vision.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/adi.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/imu.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/llemu.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/misc.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/motors.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/vision.hpp","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_draw/lv_draw_line.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/pros/colors.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_version.h","c:/users/nicho/documents/github/erau_vex_blue_20_21/robot_15x15/include/display/lv_conf_checker.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15333955921748837064,"detailed_name":"pros","short_name_offset":0,"short_name_size":4,"kind":3,"hover":"","comments":"","declarations":[],"spell":"32:11-32:15|-1|1|2","extent":"32:1-381:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["32:11-32:15|-1|1|4","368:7-368:11|0|2|4","380:7-380:11|0|2|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":7422809925757747863,"detailed_name":"pros::Task","short_name_offset":6,"short_name_size":4,"kind":5,"hover":"","comments":"","declarations":["60:2-60:6|-1|1|4","82:2-82:6|-1|1|4","105:2-105:6|-1|1|4","131:2-131:6|-1|1|4","141:2-141:6|-1|1|4"],"spell":"33:7-33:11|0|2|2","extent":"33:1-321:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"vars":[6],"instances":[],"uses":["60:2-60:6|2|2|4","82:2-82:6|2|2|4","105:2-105:6|2|2|4","131:2-131:6|2|2|4","141:2-141:6|2|2|4","146:9-146:13|-1|1|4","155:2-155:6|-1|1|4"]},{"id":3,"usr":10996339434051382347,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["60:7-60:16|-1|1|4","82:7-82:16|-1|1|4"]},{"id":4,"usr":17408017808530211081,"detailed_name":"F","short_name_offset":0,"short_name_size":1,"kind":26,"hover":"","comments":"","declarations":[],"spell":"104:18-104:19|2|3|2","extent":"104:12-104:19|2|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["105:7-105:8|-1|1|4"]},{"id":5,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,2],"uses":[]},{"id":6,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[3,5],"uses":[]},{"id":7,"usr":15348951817430513354,"detailed_name":"F","short_name_offset":0,"short_name_size":1,"kind":26,"hover":"","comments":"","declarations":[],"spell":"130:18-130:19|3|3|2","extent":"130:12-130:19|3|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["131:7-131:8|-1|1|4"]},{"id":8,"usr":7864121898244130665,"detailed_name":"pros::task_t","short_name_offset":6,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[6,6],"uses":["141:7-141:13|-1|1|4","155:18-155:24|-1|1|4","215:11-215:17|-1|1|4","320:2-320:8|-1|1|4"]},{"id":9,"usr":15367742584208778158,"detailed_name":"pros::Mutex","short_name_offset":6,"short_name_size":5,"kind":5,"hover":"","comments":"","declarations":["325:2-325:7|-1|1|4"],"spell":"323:7-323:12|0|2|2","extent":"323:1-361:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[22,23,24],"vars":[],"instances":[],"uses":["325:2-325:7|9|2|4"]},{"id":10,"usr":8345230848373571968,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["368:13-368:14|0|2|4","380:13-380:14|0|2|4"]}],"funcs":[{"id":0,"usr":7046001601553805830,"detailed_name":"void pros::Task::Task(pros::task_fn_t function, void *parameters, int prio, int stack_depth, const char *name)","short_name_offset":11,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"\r\nCreates a new task and add it to the list of tasks that are ready to run.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENOMEM - The stack cannot be used as the TCB was not created.\r\n\r\n\\param function\r\n       Pointer to the task entry function\r\n\\param parameters\r\n       Pointer to memory that will be used as a parameter for the task\r\n       being created. This memory should not typically come from stack,\r\n       but rather from dynamically (i.e., malloc'd) or statically\r\n       allocated memory.\r\n\\param prio\r\n       The priority at which the task should run.\r\n       TASK_PRIO_DEFAULT plus/minus 1 or 2 is typically used.\r\n\\param stack_depth\r\n       The number of words (i.e. 4 * stack_depth) available on the task's\r\n       stack. TASK_STACK_DEPTH_DEFAULT is typically sufficienct.\r\n\\param name\r\n       A descriptive name for the task.  This is mainly used to facilitate\r\n       debugging. The name may be up to 32 characters long.","declarations":[{"spell":"60:2-60:6|2|2|1","param_spellings":["60:17-60:25","60:33-60:43","60:66-60:70","61:21-61:32","61:73-61:77"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":8974445483516001858,"detailed_name":"void pros::Task::Task(pros::task_fn_t function, void *parameters, const char *name)","short_name_offset":11,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"\r\nCreates a new task and add it to the list of tasks that are ready to run.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENOMEM - The stack cannot be used as the TCB was not created.\r\n\r\n\\param function\r\n       Pointer to the task entry function\r\n\\param parameters\r\n       Pointer to memory that will be used as a parameter for the task\r\n       being created. This memory should not typically come from stack,\r\n       but rather from dynamically (i.e., malloc'd) or statically\r\n       allocated memory.\r\n\\param name\r\n       A descriptive name for the task.  This is mainly used to facilitate\r\n       debugging. The name may be up to 32 characters long.","declarations":[{"spell":"82:2-82:6|2|2|1","param_spellings":["82:17-82:25","82:33-82:43","82:57-82:61"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":13155772309070786373,"detailed_name":"void pros::Task::Task(F &&function, int prio, int stack_depth, const char *name)","short_name_offset":11,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"\r\nCreates a new task and add it to the list of tasks that are ready to run.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENOMEM - The stack cannot be used as the TCB was not created.\r\n\r\n\\param function\r\n       Callable object to use as entry function\r\n\\param prio\r\n       The priority at which the task should run.\r\n       TASK_PRIO_DEFAULT plus/minus 1 or 2 is typically used.\r\n\\param stack_depth\r\n       The number of words (i.e. 4 * stack_depth) available on the task's\r\n       stack. TASK_STACK_DEPTH_DEFAULT is typically sufficienct.\r\n\\param name\r\n       A descriptive name for the task.  This is mainly used to facilitate\r\n       debugging. The name may be up to 32 characters long.","declarations":[],"spell":"105:2-105:6|2|2|2","extent":"105:2-106:29|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[0,1,2,3],"uses":[],"callees":[]},{"id":3,"usr":3204776201470185961,"detailed_name":"void pros::Task::Task(F &&function, const char *name)","short_name_offset":11,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"\r\nCreates a new task and add it to the list of tasks that are ready to run.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nENOMEM - The stack cannot be used as the TCB was not created.\r\n\r\n\\param function\r\n       Callable object to use as entry function\r\n\\param name\r\n       A descriptive name for the task.  This is mainly used to facilitate\r\n       debugging. The name may be up to 32 characters long.","declarations":[],"spell":"131:2-131:6|2|2|2","extent":"131:2-131:38|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[4,5],"uses":[],"callees":[]},{"id":4,"usr":3775717028349238260,"detailed_name":"void pros::Task::Task(pros::task_t task)","short_name_offset":11,"short_name_size":4,"kind":9,"storage":1,"hover":"","comments":"\r\nCreate a C++ task object from a task handle\r\n\r\n\\param task\r\n       A task handle from task_create() for which to create a pros::Task\r\n       object.","declarations":[{"spell":"141:2-141:6|2|2|1","param_spellings":["141:14-141:18"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":9380685938695633516,"detailed_name":"pros::Task pros::Task::current()","short_name_offset":23,"short_name_size":7,"kind":254,"storage":3,"hover":"","comments":"\r\nGet the currently running Task","declarations":[{"spell":"146:14-146:21|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":16033917370114577237,"detailed_name":"pros::Task &pros::Task::operator=(pros::task_t in)","short_name_offset":24,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nCreates a new task and add it to the list of tasks that are ready to run.\r\n\r\n\\param in\r\n       A task handle from task_create() for which to create a pros::Task\r\n       object.","declarations":[{"spell":"155:8-155:17|2|2|1","param_spellings":["155:25-155:27"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":11820862304877647048,"detailed_name":"void pros::Task::remove()","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\nRemoves the Task from the RTOS real time kernel's management. This task\r\nwill be removed from all ready, blocked, suspended and event lists.\r\n\r\nMemory dynamically allocated by the task is not automatically freed, and\r\nshould be freed before the task is deleted.","declarations":[{"spell":"164:7-164:13|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":7177443439574029934,"detailed_name":"int pros::Task::get_priority()","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the priority of the specified task.\r\n\r\n\\return The priority of the task","declarations":[{"spell":"171:16-171:28|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":3496991747040357263,"detailed_name":"void pros::Task::set_priority(int prio)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the priority of the specified task.\r\n\r\nIf the specified task's state is available to be scheduled (e.g. not\r\nblocked) and new priority is higher than the currently running task,\r\na context switch may occur.\r\n\r\n\\param prio\r\n       The new priority of the task","declarations":[{"spell":"183:7-183:19|2|2|1","param_spellings":["183:34-183:38"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":12065028864460601472,"detailed_name":"int pros::Task::get_state()","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the state of the specified task.\r\n\r\n\\return The state of the task","declarations":[{"spell":"190:16-190:25|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":13761264817742389517,"detailed_name":"void pros::Task::suspend()","short_name_offset":17,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"\r\nSuspends the specified task, making it ineligible to be scheduled.","declarations":[{"spell":"195:7-195:14|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":615628427771359697,"detailed_name":"void pros::Task::resume()","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\nResumes the specified task, making it eligible to be scheduled.\r\n\r\n\\param task\r\n       The task to resume","declarations":[{"spell":"203:7-203:13|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":3953121965671706219,"detailed_name":"const char *pros::Task::get_name()","short_name_offset":24,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the name of the specified task.\r\n\r\n\\return A pointer to the name of the task","declarations":[{"spell":"210:14-210:22|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":2776217347592151419,"detailed_name":"pros::task_t pros::Task::operator void *()","short_name_offset":25,"short_name_size":15,"kind":9,"storage":1,"hover":"","comments":"\r\nConvert this object to a C task_t handle","declarations":[],"spell":"215:2-215:17|2|2|2","extent":"215:2-217:3|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":8826919871719150607,"detailed_name":"int pros::Task::notify()","short_name_offset":16,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\nSends a simple notification to task and increments the notification\r\ncounter.\r\n\r\nSee https://pros.cs.purdue.edu/v5/tutorials/topical/notifications.html for\r\ndetails.\r\n\r\n\\return Always returns true.","declarations":[{"spell":"228:16-228:22|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":14242608213732720581,"detailed_name":"int pros::Task::notify_ext(int value, pros::notify_action_e_t action, int *prev_value)","short_name_offset":16,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\nSends a notification to a task, optionally performing some action. Will\r\nalso retrieve the value of the notification in the target task before\r\nmodifying the notification value.\r\n\r\nSee https://pros.cs.purdue.edu/v5/tutorials/topical/notifications.html for\r\ndetails.\r\n\r\n\\param value\r\n       The value used in performing the action\r\n\\param action\r\n       An action to optionally perform on the receiving task's notification\r\n       value\r\n\\param prev_value\r\n       A pointer to store the previous value of the target task's\r\n       notification, may be NULL\r\n\r\n\\return Dependent on the notification action.\r\nFor NOTIFY_ACTION_NO_WRITE: return 0 if the value could be written without\r\nneeding to overwrite, 1 otherwise.\r\nFor all other NOTIFY_ACTION values: always return 0","declarations":[{"spell":"252:16-252:26|2|2|1","param_spellings":["252:41-252:46","252:66-252:72","252:89-252:99"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":5923715809167749212,"detailed_name":"int pros::Task::notify_take(bool clear_on_exit, int timeout)","short_name_offset":16,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"\r\nWaits for a notification to be nonzero.\r\n\r\nSee https://pros.cs.purdue.edu/v5/tutorials/topical/notifications.html for\r\ndetails.\r\n\r\n\\param clear_on_exit\r\n       If true (1), then the notification value is cleared.\r\n       If false (0), then the notification value is decremented.\r\n\\param timeout\r\n       Specifies the amount of time to be spent waiting for a notification\r\n       to occur.\r\n\r\n\\return The value of the task's notification value before it is decremented\r\nor cleared","declarations":[{"spell":"270:23-270:34|2|2|1","param_spellings":["270:40-270:53","270:69-270:76"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":15906114790878899259,"detailed_name":"bool pros::Task::notify_clear()","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nClears the notification for a task.\r\n\r\nSee https://pros.cs.purdue.edu/v5/tutorials/topical/notifications.html for\r\ndetails.\r\n\r\n\\return False if there was not a notification waiting, true if there was","declarations":[{"spell":"280:7-280:19|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":12418686562815133203,"detailed_name":"void pros::Task::delay(const int milliseconds)","short_name_offset":17,"short_name_size":5,"kind":254,"storage":3,"hover":"","comments":"\r\nDelays a task for a given number of milliseconds.\r\n\r\nThis is not the best method to have a task execute code at predefined\r\nintervals, as the delay time is measured from when the delay is requested.\r\nTo delay cyclically, use task_delay_until().\r\n\r\n\\param milliseconds\r\n       The number of milliseconds to wait (1000 milliseconds per second)","declarations":[{"spell":"292:14-292:19|2|2|1","param_spellings":["292:40-292:52"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":3959852638444019252,"detailed_name":"void pros::Task::delay_until(int *const prev_time, const int delta)","short_name_offset":17,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"\r\nDelays a task until a specified time.  This function can be used by\r\nperiodic tasks to ensure a constant execution frequency.\r\n\r\nThe task will be woken up at the time *prev_time + delta, and *prev_time\r\nwill be updated to reflect the time at which the task will unblock.\r\n\r\n\\param prev_time\r\n       A pointer to the location storing the setpoint time. This should\r\n       typically be initialized to the return value from pros::millis().\r\n\\param delta\r\n       The number of milliseconds to wait (1000 milliseconds per second)","declarations":[{"spell":"307:14-307:25|2|2|1","param_spellings":["307:47-307:56","307:78-307:83"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":3280809199782232318,"detailed_name":"int pros::Task::get_count()","short_name_offset":16,"short_name_size":9,"kind":254,"storage":3,"hover":"","comments":"\r\nGets the number of tasks the kernel is currently managing, including all\r\nready, blocked, or suspended tasks. A task that has been deleted, but not\r\nyet reaped by the idle task will also be included in the count.\r\nTasks recently created may take one context switch to be counted.\r\n\r\n\\return The number of tasks that are currently being managed by the kernel.","declarations":[{"spell":"317:23-317:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":7291850932829850717,"detailed_name":"void pros::Mutex::Mutex()","short_name_offset":11,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"325:2-325:7|9|2|1","param_spellings":[]}],"declaring_type":9,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":17586725939856969512,"detailed_name":"bool pros::Mutex::take(int timeout)","short_name_offset":18,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\nTakes and locks a mutex, waiting for up to a certain number of milliseconds\r\nbefore timing out.\r\n\r\nSee\r\nhttps://pros.cs.purdue.edu/v5/tutorials/topical/multitasking.html#mutexes\r\nfor details.\r\n\r\n\\param timeout\r\n       Time to wait before the mutex becomes available. A timeout of 0 can\r\n       be used to poll the mutex. TIMEOUT_MAX can be used to block\r\n       indefinitely.\r\n\r\n\\return True if the mutex was successfully taken, false otherwise. If false\r\nis returned, then errno is set with a hint about why the the mutex\r\ncouldn't be taken.","declarations":[{"spell":"344:7-344:11|9|2|1","param_spellings":["344:26-344:33"]}],"declaring_type":9,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":13398092397485306923,"detailed_name":"bool pros::Mutex::give()","short_name_offset":18,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\nUnlocks a mutex.\r\n\r\nSee\r\nhttps://pros.cs.purdue.edu/v5/tutorials/topical/multitasking.html#mutexes\r\nfor details.\r\n\r\n\\return True if the mutex was successfully returned, false otherwise. If\r\nfalse is returned, then errno is set with a hint about why the mutex\r\ncouldn't be returned.","declarations":[{"spell":"357:7-357:11|9|2|1","param_spellings":[]}],"declaring_type":9,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":2626828596318746820,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["0:0-0:0|0|2|32"],"callees":[]},{"id":26,"usr":18331390734575801178,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["0:0-0:0|0|2|32"],"callees":[]}],"vars":[{"id":0,"usr":3556400685178540782,"detailed_name":"F &&function","short_name_offset":4,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"105:11-105:19|2|3|2","extent":"105:7-105:19|2|3|0","uses":[],"kind":253,"storage":1},{"id":1,"usr":272337296485031528,"detailed_name":"int prio","short_name_offset":4,"short_name_size":4,"hover":"int prio = TASK_PRIORITY_DEFAULT","comments":"","declarations":[],"spell":"105:35-105:39|2|3|2","extent":"105:21-105:63|2|3|0","type":5,"uses":[],"kind":253,"storage":1},{"id":2,"usr":517388741437689587,"detailed_name":"int stack_depth","short_name_offset":4,"short_name_size":11,"hover":"int stack_depth = TASK_STACK_DEPTH_DEFAULT","comments":"","declarations":[],"spell":"105:79-105:90|2|3|2","extent":"105:65-105:117|2|3|0","type":5,"uses":[],"kind":253,"storage":1},{"id":3,"usr":1143923466287145909,"detailed_name":"const char *name","short_name_offset":12,"short_name_size":4,"hover":"const char *name = \"\"","comments":"","declarations":[],"spell":"106:19-106:23|2|3|2","extent":"106:7-106:28|2|3|0","type":6,"uses":[],"kind":253,"storage":1},{"id":4,"usr":6088752924083345012,"detailed_name":"F &&function","short_name_offset":4,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"131:11-131:19|3|3|2","extent":"131:7-131:19|3|3|0","uses":[],"kind":253,"storage":1},{"id":5,"usr":16361687901951858954,"detailed_name":"const char *name","short_name_offset":12,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"131:33-131:37|3|3|2","extent":"131:21-131:37|3|3|0","type":6,"uses":[],"kind":253,"storage":1},{"id":6,"usr":6853505043404763062,"detailed_name":"pros::task_t pros::Task::task","short_name_offset":25,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"320:9-320:13|2|2|2","extent":"320:2-320:13|2|2|0","type":8,"uses":["216:10-216:14|14|3|4"],"kind":8,"storage":0},{"id":7,"usr":1684574352152210579,"detailed_name":"_PROS_RTOS_HPP_","short_name_offset":0,"short_name_size":15,"hover":"#define _PROS_RTOS_HPP_","comments":"","declarations":[],"spell":"22:9-22:24|-1|1|2","extent":"22:9-22:24|-1|1|0","uses":[],"kind":255,"storage":0},{"id":8,"usr":11506068721000929072,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["60:73-60:94|-1|1|4","105:42-105:63|-1|1|4","132:40-132:61|-1|1|4"],"kind":0,"storage":0},{"id":9,"usr":9318189987560729494,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["61:35-61:59|-1|1|4","105:93-105:117|-1|1|4","132:63-132:87|-1|1|4"],"kind":0,"storage":0}]}